@model PaginationInfoViewModel

@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@using Microsoft.AspNetCore.Http.Features


@inject IViewLocalizer Localizer

@{
	var uiCulture = Context.Features.Get<IRequestCultureFeature>().RequestCulture.UICulture;
}

@{
	IDictionary<string, string> buildQueryStringDict(int page)
	{
		var queryStringDict = Context.Request.Query.ToDictionary(x => x.Key, x => x.Value.ToString());
		queryStringDict["pageid"] = page.ToString();
		return queryStringDict;
	}
}

<div class="esh-pager">
	<div class="container-fluid">
		<article class="esh-pager-wrapper row">
			<nav>
				<div class="col-md-2 col-xs-12">
					<a class="esh-pager-item-left esh-pager-item--navigable esh-pager-item @Model.Previous"
					   id="Previous"
					   asp-all-route-data="@buildQueryStringDict(Model.ActualPage - 1)"
					   aria-label="Previous">
						@Localizer["Previous"]
					</a>
				</div>

				<div class="col-md-8 col-xs-12">
					<span class="esh-pager-item">
						@Localizer["Showing"] @Model.ItemsPerPage @Localizer["of"] @Model.TotalItems @Localizer["products - Page"] @(Model.ActualPage + 1) - @Model.TotalPages
					</span>
				</div>

				<div class="col-md-2 col-xs-12">
					<a class="esh-pager-item-right esh-pager-item--navigable esh-pager-item @Model.Next"
					   id="Next"
					   asp-all-route-data="@buildQueryStringDict(Model.ActualPage + 1)"
					   aria-label="Next">
						@Localizer["Next"]
					</a>
				</div>
			</nav>
		</article>
	</div>
</div>
